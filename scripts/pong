#!/bin/bash
# @file pong
# â˜†  Graphs ICMP response times
# @author Alister Lewis-Bowen <alister@different.com>
# @requires color <http://code.google.com/p/ansi-color/>
# @requires graph.fnc <http://bashscripts.org/forum/viewtopic.php?f=7&t=1141>

. $(dirname $(stat -f $0))/graph.fnc    # import graph function

HOST=${1:-different.com}    # default host
HEIGHT=10                   # graph height
WIDTH=79                    # graph width
TMPFILE=.pong-XXXXXXXXXX    # temp file name template
METRICS=$(mktemp $TMPFILE)  # output file of ping results
DATA=$(mktemp $TMPFILE)     # data store

function init {
    ping $HOST > $METRICS 2>/dev/null &
    echo $(for i in $(seq $WIDTH); do echo 0; done) > $DATA
}

function start {
    local metric    # line of ping output
    local mtime     # icmp response time
    local data      # temp store for data
    while true; do
        metric=$(tail -n1 $METRICS)
        [ "$(echo $metric | grep timeout -c)" -eq '0' ] && (
            mtime=$(echo $metric | grep time= | perl -lpe's/.*time=(.*) ms.*/\1/g')
            [ ! -z "$mtime" ] && (
                data=$(cat $DATA)
                echo $(echo $data $mtime | cut -d' ' -f2-$WIDTH) > $DATA
            )
        )
        graphIt
        sleep 1
    done
}

function graphIt {
    clear
    echo "$(color yellow)Response from $(color bd)$HOST$(color)$(color yellow) in milliseconds:$(color)"
    graph $HEIGHT $(cat $DATA)
}

function finish {
    rm -f ${TMPFILE//[X]}*    # clean up temp files
}

trap finish EXIT

init
start
